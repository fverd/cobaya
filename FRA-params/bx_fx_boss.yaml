theory:
  classy:
    extra_args:
      N_ncdm: 0.
      N_ur: 3.046
      gauge: newtonian
      non_linear: False
    stop_at_error: False

likelihood:
  pbjboss:
    python_path: pbj4cobaya/
    pbj_path: pbj-multiz/
    stop_at_error: True
    theory:
      linear: cobaya 
      scale_dependent_growth: True
      IRresum: True
      IRresum_kind: EH # options EH, DST
      do_redshift_rescaling: False
    likelihood:
      observables: ['P0', 'P2'] # options: Pk, Bk, P0, P2, P4, B0, B2, B4
      model: model_varied_cosmology_analytic_marg_multiz_withchi
      type: Gaussian # options: Gaussian, Hartlap, Sellentin
      cosmology: varied # options: fixed, varied
      do_analytic_marg: True
      # store_theorydict: True
    which_Plin: delta_nonu # options delta_tot, delta_nonu (i.e. cb)

params:
  omega_chi:
    prior:
      min: 0.0
      max: 0.02
    latex: \Omega_\chi h^2

  omega_cdm:
    prior:
      dist: norm
      loc: 0.1177
      scale: 0.002
    latex: \Omega_\mathrm{c} h^2

  kJ0p5: 
    value: 0.05
    drop: True

  acs_chi:
    value: 'lambda kJ0p5: 0.0321*0.01/kJ0p5'
  cs2_peak_chi: 0.333333

  h:
    prior:
      min: 0.63
      max: 0.75
    latex: h

  omega_b:
    prior:
      dist: norm
      loc: 0.02212
      scale: 0.00022
    latex: \Omega_\mathrm{b} h^2

  logA:
    prior:
      dist: norm
      loc: 3.040
      scale: 0.016
    latex: \log(10^{10} A_\mathrm{s})
    drop: True

  A_s:
    value: 'lambda logA: 1e-10*np.exp(logA)'
    latex: A_\mathrm{s}

  n_s:
    prior:
      dist: norm
      loc: 0.9626
      scale: 0.0057

  tau_reio: 0.0544

  # bx_ngc_z1:
  #   prior:
  #     min: 0
  #     max: 0.2
  #   latex: b_\chi/b_1 \;ngc,z1
  #   drop: True

  # bx_sgc_z1:
  #   prior:
  #     min: 0
  #     max: 0.2
  #   latex: b_\chi/b_1 \;sgc,z1
  #   drop: True

  # bx_ngc_z3:
  #   prior:
  #     min: 0
  #     max: 0.2
  #   latex: b_\chi/b_1 \;ngc,z3
  #   drop: True

  # bx_sgc_z3:
  #   prior:
  #     min: 0
  #     max: 0.2
  #   latex: b_\chi/b_1 \;sgc,z3
  #   drop: True

  # br: 
  #   value: "lambda bx_ngc_z1, bx_sgc_z1, bx_ngc_z3, bx_sgc_z3: [bx_ngc_z1, bx_sgc_z1, bx_ngc_z3, bx_sgc_z3]"
  #   derived: False
  br: 0

sampler:
  evaluate:
  # nautilus:
  #   poolN: 72

# debug: True
output: chains/test/chain
